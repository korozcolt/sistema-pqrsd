services:
    app:
        build:
            context: .
            dockerfile: Dockerfile
        container_name: pqrsd_app
        environment:
            - DB_CONNECTION=mysql
            - DB_HOST=pqrsd_mysql
            - DB_PORT=3306
            - DB_DATABASE=pqrsd
            - DB_USERNAME=root
            - DB_PASSWORD=root
        volumes:
            - '.:/var/www'
            - './docker/nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf:ro'
        depends_on:
            mysql:
                condition: service_healthy
            redis:
                condition: service_healthy
        networks:
            - pqrsd_network
    nginx:
        image: 'nginx:alpine'
        container_name: pqrsd_nginx
        volumes:
            - '.:/var/www'
            - './docker/nginx:/etc/nginx/conf.d/'
        ports:
            - '8080:80'
        depends_on:
            - app
        networks:
            - pqrsd_network
    mysql:
        image: 'mysql:8.0'
        container_name: pqrsd_mysql
        environment:
            MYSQL_DATABASE: pqrsd
            MYSQL_USER: root
            MYSQL_PASSWORD: root
            MYSQL_ROOT_PASSWORD: root
        volumes:
            - 'mysql_data:/var/lib/mysql'
        ports:
            - '3308:3306'
        networks:
            - pqrsd_network
        healthcheck:
            test:
                - CMD
                - mysqladmin
                - ping
                - '-h'
                - localhost
            interval: 10s
            retries: 5
    redis:
        image: 'redis:7-alpine'
        container_name: pqrsd_redis
        volumes:
            - 'redis_data:/data'
        ports:
            - '6381:6379'
        networks:
            - pqrsd_network
        healthcheck:
            test:
                - CMD
                - redis-cli
                - ping
networks:
    pqrsd_network: null
volumes:
    mysql_data: null
    redis_data: null
